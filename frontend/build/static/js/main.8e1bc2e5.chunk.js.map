{"version":3,"sources":["configs/Constants.js","Containers/HeaderContainer/index.jsx","AddProject/AddProject.js","Containers/HomeContainer/index.jsx","App.jsx","serviceWorker.js","Reducer/index.js","index.js"],"names":["NAV_MENU","label","pathName","icon","Description","Assessment","useStyles","makeStyles","theme","rootContainer","height","display","alignItems","justifyContent","color","palette","primary","main","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","toolbar","padding","formControlLabelRoot","margin","formControlLabel","fontSize","position","formControlIcon","background","avatarContent","cursor","ObjectFit","width","avatar","withRouter","connect","state","dispatch","bindActionCreators","headerActions","history","classes","setDrawerStatus","navIndex","location","pathname","findIndex","menu","className","AppBar","Toolbar","Grid","container","justify","Typography","style","variant","headerlabel","item","FormControlLabel","root","control","IconButton","ArrowDropDown","labelPlacement","Avatar","AccountCircle","FormDialog","props","handleSubmit","handleChange","React","useState","open","setOpen","projectName","setProjectName","projectMember","setProjectMember","handleClose","type","Button","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","value","onChange","e","target","console","log","htmlFor","component","DialogActions","top","searchRoot","backgroundColor","borderRadius","searchField","input","paper","paper2","bottom","right","connectionexp","projects","l","length","Search","search","InputBase","fullWidth","placeholder","xs","flexWrap","overflow","map","key","Paper","backgroundSize","backgroundPosition","backgroundImage","project_pic","CardActions","size","createMuiTheme","secondary","fetch","then","response","json","data","Component","Boolean","window","hostname","match","combineReducers","headerState","headerReducer","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8e1bc2e5.chunk.js","sourcesContent":["import React from \"react\";\nimport { Home as HomeIcon, Description, Assessment } from \"@material-ui/icons\";\n\n\nexport const NAV_MENU = [\n  {\n    label: \"Home\",\n    pathName: \"/Home\",\n    icon: <HomeIcon />,\n  },\n  {\n    label: \"Form\",\n    pathName: \"/Form\",\n    icon: <Description />,\n  },\n  {\n    label: \"Report\",\n    pathName: \"/Report\",\n    icon: <Assessment />,\n  },\n];\n","import React from \"react\";\nimport {\n  Grid,\n  makeStyles,\n  AppBar,\n  Toolbar,\n  Typography,\n  FormControlLabel,\n  IconButton,\n  Avatar,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { NAV_MENU } from \"../../configs/Constants\";\nimport { bindActionCreators } from \"redux\";\nimport headerActions from \"./headerActions\";\nimport { ArrowDropDown, AccountCircle } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  rootContainer: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: `${theme.palette.primary.main}`,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  toolbar: {\n    height: 64,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: \"0 8px\",\n  },\n  formControlLabelRoot: {\n    margin: \"0 15px\",\n  },\n  formControlLabel: {\n    color: \"inherit\",\n    fontSize: \"0.875em\",\n    position: \"relative\",\n  },\n  formControlIcon: {\n    padding: \"5px !important\",\n    color: \"#FFF\",\n    \"&:hover\": {\n      background: \"none !important\",\n    },\n  },\n  avatarContent: {\n    cursor: \"pointer\",\n    height: \"auto\",\n    ObjectFit: \"fill\",\n    width: \"inherit\",\n  },\n  avatar: {\n    height: 34,\n    width: 34,\n  },\n}));\n\nconst Header = ({ history, setDrawerStatus }) => {\n  const classes = useStyles();\n  const getSelectedMenu = () =>\n    NAV_MENU.findIndex((menu) => history.location.pathname === menu.pathName);\n  const navIndex = history.location.pathname === \"/\" ? 0 : getSelectedMenu();\n\n  return (\n    <div className={classes.rootContainer}>\n      <AppBar className={classes.appBar} position=\"fixed\">\n        <Toolbar>\n          <Grid container alignItems=\"center\" justify=\"space-between\">\n            <Typography\n              color=\"inherit\"\n              style={{ display: \"flex\" }}\n              variant=\"h6\"\n            >\n              <span className={classes.headerlabel}>\n                {NAV_MENU[navIndex].label}\n              </span>\n            </Typography>\n            <Grid item>\n              <FormControlLabel\n                classes={{\n                  root: classes.formControlLabelRoot,\n                  label: classes.formControlLabel,\n                }}\n                control={\n                  <IconButton className={classes.formControlIcon}>\n                    <ArrowDropDown />\n                  </IconButton>\n                }\n                label={\"Resources\"}\n                labelPlacement={\"start\"}\n              />\n              <FormControlLabel\n                classes={{\n                  root: classes.formControlLabelRoot,\n                  label: classes.formControlLabel,\n                }}\n                control={\n                  <IconButton className={classes.formControlIcon}>\n                    <ArrowDropDown />\n                  </IconButton>\n                }\n                label={\"Support\"}\n                labelPlacement={\"start\"}\n              />\n              <FormControlLabel\n                classes={{\n                  root: classes.formControlLabelRoot,\n                  label: classes.formControlLabel,\n                }}\n                control={\n                  <IconButton className={classes.formControlIcon}>\n                    <Avatar className={classes.avatar}>\n                      <AccountCircle className={classes.avatarContent} />\n                    </Avatar>\n                  </IconButton>\n                }\n                label={\"User Name\"}\n                labelPlacement={\"start\"}\n              />\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(headerActions, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function FormDialog(props) {\n  const { handleSubmit, handleChange } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const [projectName, setProjectName] = useState(\"\");\n  const [projectMember, setProjectMember] = useState(\"\");\n  // const [project_pic, setProjectPic]=useState(\"\");\n\n  const updateProjectName = (e) => {\n    let someproject = setProjectName(e.target.value);\n    console.log(projectName);\n  };\n\n  const updateProjectMember = (e) => {\n    let somemember = setProjectMember(e.target.value);\n    console.log(projectMember);\n  };\n  // const updateProjectPicture =(e) =>{\n  //   let somepic=setProjectPic(e.target.value);\n  //   console.log(project_pic);\n  // }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (type = \"cancel\") => {\n    setOpen(false);\n\n    if (type === \"submit\") {\n      // perform ur operation\n      \n    \n\n      handleSubmit(projectName, projectMember);\n      setProjectName(\"\");\n      setProjectMember(\"\");\n      // setProjectPic(\"\");\n      \n      \n    }\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Add Project\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Add Project</DialogTitle>\n        <DialogContent>\n          <DialogContentText></DialogContentText>\n          <TextField\n            label=\"Project Name\"\n            type=\"text\"\n            value={projectName}\n            onChange={updateProjectName}\n          />\n          <TextField\n            label=\"Project Members\"\n            type=\"text\"\n            value={projectMember}\n            onChange={updateProjectMember}\n          />\n          {/* <input\n            accept=\"image/*\"\n            \n            style={{ display: \"none\" }}\n            value={project_pic}\n            onChange={updateProjectPicture}\n            id=\"raised-button-file\"\n            multiple\n            type=\"file\"\n          /> */}\n        </DialogContent>\n        <DialogContent>\n        \n        <label htmlFor=\"raised-button-file\">\n            <Button\n              variant=\"raised\"\n              component=\"span\"\n              \n            >\n              Upload\n            </Button>\n          </label>\n          </DialogContent>\n        {/* <DialogContent>\n        <input type=\"file\" onChange={handleChange} style={{display: 'none'}}/> \n        </DialogContent> */}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          \n\n          <Button onClick={() => handleClose(\"submit\")} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  makeStyles,\n  Grid,\n  Typography,\n  InputBase,\n  Paper,\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Search } from \"@material-ui/icons\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddProject from \"../../AddProject/AddProject\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport CardActions from \"@material-ui/core/CardActions\";\n\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    top: 64,\n    width: \"calc(100% - 30px)\",\n    height: \"calc(100% - (64px + 30px))\",\n    padding: 15,\n    position: \"absolute\",\n  },\n  searchRoot: {\n    height: 40,\n    display: \"flex\",\n    padding: \"0 10px\",\n    margin: \"0 15px\",\n    alignItems: \"center\",\n    backgroundColor: \"#F9F7F7\",\n    borderRadius: 50,\n  },\n  searchField: {\n    height: 30,\n    width: 30,\n    padding: 5,\n  },\n  input: {\n    fontSize: \"0.875em\",\n  },\n\n  paper: {\n    height: 140,\n    width: \"100%\",\n  },\n  paper2: {\n    height: \"calc(100% - 30px)\",\n    width: \"calc(100% - 30px)\",\n    margin: 15,\n  },\n  bottom: {\n    bottom: 0,\n    right: 0,\n  },\n}));\n\nconst PROJECTS = [];\n\nconst Home = (props) => {\n  const { projects, handleSubmit, handleChange } = props;\n  const classes = useStyles();\n  var l = projects.length;\n  var i = 0;\n  console.log(l);\n\n  console.log(projects);\n\n  return (\n    <div className={classes.root}>\n      <Grid item style={{ height: \"100%\" }}>\n        <Grid style={{ height: 50 }}>\n          <Typography\n            color=\"inherit\"\n            style={{ display: \"flex\", padding: \"0 15px\", alignItems: \"center\" }}\n            variant=\"h6\"\n          >\n            <span>Projects</span>\n            <span className={classes.searchRoot}>\n              <Search\n                classes={{ root: classes.search }}\n                style={{ color: \"#808080\" }}\n              />\n              <InputBase\n                fullWidth\n                className={classes.input}\n                placeholder=\"Search ...\"\n                value={\"\"}\n                // onChange={handleOnSeach}\n              />\n            </span>\n          </Typography>\n        </Grid>\n        <Grid container style={{ height: \"calc(100% - 50px)\" }}>\n          <Grid\n            xs={8}\n            style={{\n              display: \"flex\",\n              flexWrap: \"inherit\",\n              height: \"100%\",\n              overflow: \"auto\",\n            }}\n          >\n            {projects.map((value) => (\n              <Grid key={0} item xs={4} style={{ padding: 15 }}>\n                <Paper\n                  style={{\n                    height: \"calc(100%-10px)\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center\",\n                    backgroundImage: \"url(\" + value.project_pic + \")\",\n                  }}\n                  className={classes.paper}\n                >\n                  {value.projectName}\n\n                  <CardActions>\n                    <Button size=\"small\" className=\"bottom\">\n                      <SettingsIcon />\n                    </Button>\n                  </CardActions>\n                </Paper>\n              </Grid>\n            ))}\n            <Grid\n              xs={8}\n              style={{\n                display: \"flex\",\n                flexWrap: \"inherit\",\n                height: \"100%\",\n                overflow: \"auto\",\n              }}\n            >\n              <AddProject\n                handleSubmit={handleSubmit}\n                handleChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          <Grid xs={4}>\n            <Paper className={classes.paper2} />\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, null)(Home);\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core\";\nimport HeaderContainer from \"./Containers/HeaderContainer\";\nimport HomeContainer from \"./Containers/HomeContainer\";\nimport { Component } from \"react\";\nimport AddProject from \"./AddProject/AddProject\";\n// Setting Theme for an application\nexport const DEFAULT_THEME = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#DC004E\",\n    },\n    secondary: {\n      main: \"#1976D2\",\n    },\n  },\n});\n\n\nclass connectionexp extends React.Component{\n  componentDidMount(){\n    const apiUrl='http://127.0.0.1:8000/api/'\n    fetch(apiUrl)\n    .then((response)=>response.json())\n    .then((data)=> console.log(data));\n  }\n  render() {\n    return <div>Example</div>\n      // <MuiThemeProvider theme={DEFAULT_THEME}>\n      //   <HeaderContainer />\n      //   {/* <Switch>\n      //   <Redirect exact from=\"/\" to=\"/Home\" />\n      //   <Route exact path=\"/Home\"> */}\n      //   <HomeContainer projects={this.state.projectList} handleSubmit={this.handleSubmit} handleChange={this.handleChange}/>\n      //   {/* </Route>\n      // </Switch> */}\n        \n      // </MuiThemeProvider>\n      \n    \n  }\n}\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       projectList: [],\n//       projectDetails: {\n//         id: null,\n//         projectName: \"\",\n//         projectMember: \"\",\n//       },\n//       editing: false,\n//     };\n//     this.fetchProject = this.fetchProject.bind(this);\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//   //************************************************************************************************************ */\n//   componentWillMount() {\n//     this.fetchProject();\n//   }\n\n//   fetchProject() {\n//     console.log(\"fetching..\");\n//     fetch(\"http://127.0.0.1:8000/api/project-list/\")\n//       .then((response) => response.json())\n//       .then((data) =>\n//         this.setState({\n//           projectList: data,\n//         })\n//       );\n//   }\n\n//   handleChange(projectName, projectMember) {\n    \n//     this.setState({\n//       projectDetails: {\n//         ...this.state.projectDetails,\n//         projectName: projectName,\n//         projectMember:projectMember,\n//       },\n//     });\n//     return\n\n//     // this.setState({\n//     //   projectDetails: {\n//     //     ...this.state.projectDetails,\n//     //     projectName: value,\n//     //   },\n//     // });\n//   }\n\n//   handleSubmit(projectName, projectMember) {\n//     let projectData = {\n//       projectName:projectName,\n//       projectMembers:projectMember,\n//       // project_pic:project_pic,\n      \n//     }\n//     console.log(projectData)\n//  //  const {projectName:namevalue , projectMember:membervalue}=e\n//     console.log(\"ITEM\", projectData);\n//     var url = \"http://127.0.0.1:8000/api/project-create/\";\n//     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         \"content-type\": \"application/json\",\n//       },\n//       body: JSON.stringify(projectData),\n//     }).then((Response) => {\n//         this.fetchProject();\n//         /* this.setState({\n//           projectDetails: {\n//             projectName:projectName,\n//             projectMember:projectMember,\n            \n//           },\n//         }); */\n//       })\n//       .catch(function (error) {\n//         console.log(\"Error:\", error);\n//       });\n//   }\n//   //*********************************************************************************************************** */\n\n \n\n\nexport default connectionexp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport headerReducer from \"../Containers/HeaderContainer/headerReducer\";\n\nexport default combineReducers({\n  headerState: headerReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Reducer\";\nimport { Route,BrowserRouter as Router,Switch } from \"react-router-dom\";\n\nconst routing=(\n  <Router>\n    <Switch>\n      <Route exact path='/' component={App}/>\n    </Switch>\n  </Router>\n\n);\n\n\n// const configureStore = (initialState) => {\n//   const store = createStore(rootReducer, initialState, applyMiddleware(thunk));\n\n//   return store;\n// };\n\n// ReactDOM.render(\n//   <BrowserRouter>\n//     <Provider store={configureStore({})}>\n//       <App />\n//     </Provider>\n//   </BrowserRouter>,\n//   document.getElementById(\"root\")\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}